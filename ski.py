#!/usr/bin/env python3
# -*- coding: utf-8 -*-
import numpy as np
from skimage.morphology import skeletonize,skeletonize_3d
from astropy.io import fits


X, Y = np.ogrid[0:9, 0:9]
ellipse = (1./3 * (X - 4)**2 + (Y - 4)**2 < 3**2).astype(np.uint8)
print(ellipse)
#array([[0, 0, 0, 1, 1, 1, 0, 0, 0],
#       [0, 0, 1, 1, 1, 1, 1, 0, 0],
#       [0, 0, 1, 1, 1, 1, 1, 0, 0],
#       [0, 0, 1, 1, 1, 1, 1, 0, 0],
#       [0, 0, 1, 1, 1, 1, 1, 0, 0],
#       [0, 0, 1, 1, 1, 1, 1, 0, 0],
#       [0, 0, 1, 1, 1, 1, 1, 0, 0],
#       [0, 0, 1, 1, 1, 1, 1, 0, 0],
#       [0, 0, 0, 1, 1, 1, 0, 0, 0]], dtype=uint8)
skel = skeletonize(ellipse)
print(skel.astype(np.uint8))
#array([[0, 0, 0, 0, 0, 0, 0, 0, 0],
#       [0, 0, 0, 0, 0, 0, 0, 0, 0],
#       [0, 0, 0, 0, 0, 0, 0, 0, 0],
#       [0, 0, 0, 0, 1, 0, 0, 0, 0],
#       [0, 0, 0, 0, 1, 0, 0, 0, 0],
#       [0, 0, 0, 0, 1, 0, 0, 0, 0],
#       [0, 0, 0, 0, 1, 0, 0, 0, 0],
#       [0, 0, 0, 0, 0, 0, 0, 0, 0],
#       [0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=uint8)

img_o = np.array([[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0],
                   [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0],
                   [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0],
                   [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
                   [0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0],
                   [0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0],
                   [0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0],
                   [0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0],
                   [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0],
                   [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
                   [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
                   [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
                   [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0],
                   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=np.uint8)

cube = fits.getdata('ngc3627_co21_12m+7m+tp_mask.fits')
dskel = skeletonize_3d(cube)
print(dskel)
res = skeletonize_3d(img_o)
print(res)
print(cube)